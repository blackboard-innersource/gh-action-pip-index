on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unit tests
        run: make

  action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run action
        uses: ./
        env:
          ARTIFACTORY_USERNAME: test_username
          ARTIFACTORY_TOKEN: test_token
          ARTIFACTORY_PYPI_INDEX: https://example.com/test_pypi_index
          ARTIFACTORY_NPM_REGISTRY: https://example.com/test_npm_registry/

      - name: Test .netrc exists
        run: test -f ~/.netrc && cat ~/.netrc

      - name: Test pip.conf exists
        run: test -f ~/.config/pip/pip.conf && cat ~/.config/pip/pip.conf

      - name: Test .npmrc exists
        run: test -f ~/.npmrc && cat ~/.npmrc

  cd:
    needs: [test, action]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Next tag info
        id: tag
        run: |
          go install github.com/caarlos0/svu@v1.5.0
          next=$(svu next --pattern 'v*.*.*')
          echo "current: $(svu current)"
          echo "next:    $next"
          echo "::set-output name=make::$(if [ "$next" = $(svu current) ]; then echo "0"; else echo "1"; fi)"
          echo "::set-output name=next::$next"
          echo ${next#"v"} > VERSION

      - name: Version
        id: version
        if: steps.tag.outputs.make == '1'
        uses: blackboard-innersource/gh-action-version-cat@v2.0.1

      - name: Create GitHub release
        if: steps.tag.outputs.make == '1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.version.outputs.version }} \
            --title ${{ steps.version.outputs.version }} \
            --target ${{ github.sha }}

      - name: Checkout ${{ steps.version.outputs.version }}
        if: steps.tag.outputs.make == '1'
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.version.outputs.version }}
          fetch-depth: 0

      - name: Tag and Push v${{ steps.version.outputs.major }}
        if: steps.tag.outputs.make == '1'
        run: |
          git tag -f v${{ steps.version.outputs.major }}
          git push -f origin v${{ steps.version.outputs.major }}